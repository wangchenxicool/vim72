--- src/gui.c	(.../vendor/vim/current)	(revision 223)
+++ src/gui.c	(.../trunk/vim)	(revision 223)
@@ -2647,6 +2647,10 @@
     long    wtime;
 {
     int	    retval;
+#if defined(FEAT_GDB) && defined(HAVE_GETTIMEOFDAY) && defined(HAVE_SYS_TIME_H)
+    struct timeval  start_tv;
+    gettimeofday(&start_tv, NULL);
+#endif
 
     /*
      * If we're going to wait a bit, update the menus and mouse shape for the
@@ -2673,7 +2677,35 @@
 	/* Blink when waiting for a character.	Probably only does something
 	 * for showmatch() */
 	gui_mch_start_blink();
+
+#ifdef FEAT_GDB
+	while ((retval = gui_mch_wait_for_chars(wtime)) == FAIL)
+	{
+	    if (gdb_event(gdb) && gdb_allowed(gdb))
+	    {
+		gui_mch_stop_blink();	// cursor off while drawing status line
+# if defined(HAVE_GETTIMEOFDAY) && defined(HAVE_SYS_TIME_H)
+		if ((wtime = gdb_process_output(gdb, wtime, (void *)&start_tv)) < 0)
+# else
+		/* guess we got interrupted halfway */
+		wtime = wtime / 2;
+
+		if ((wtime = gdb_process_output(gdb, wtime, NULL)) < 0)
+# endif
+		{
+		    return 0;    /* launch input-line window */
+		}
+		gui_mch_start_blink();
+
+		if (wtime == 0L)
+		    break;
+	    }
+	    else
+		break;
+	}
+#else
 	retval = gui_mch_wait_for_chars(wtime);
+#endif
 	gui_mch_stop_blink();
 	return retval;
     }
@@ -2689,7 +2721,27 @@
      * 'updatetime' and if nothing is typed within that time put the
      * K_CURSORHOLD key in the input buffer.
      */
+# ifdef FEAT_GDB
+    for (;;)
+    {
+	retval = gui_mch_wait_for_chars(p_ut);
+	if (retval == FAIL && gdb_event(gdb) && gdb_allowed(gdb))
+	{
+	    gui_mch_stop_blink();	// cursor off while drawing status line
+	    if (gdb_process_output(gdb, -1L, NULL) < 0)
+	    {
+		return 0;    /* launch input-line window */
+	    }
+	    gui_mch_start_blink();
+	}
+	else
+	    break;
+    }
+
+    if (retval == OK)
+# else
     if (gui_mch_wait_for_chars(p_ut) == OK)
+# endif
 	retval = OK;
 #ifdef FEAT_AUTOCMD
     else if (trigger_cursorhold())
@@ -2710,7 +2762,25 @@
     {
 	/* Blocking wait. */
 	before_blocking();
+#ifdef FEAT_GDB
+	for (;;)
+	{
+	    retval = gui_mch_wait_for_chars(-1L);
+	    if (retval == FAIL && gdb_event(gdb) && gdb_allowed(gdb))
+	    {
+		gui_mch_stop_blink();	// cursor off while drawing status line
+		if (gdb_process_output(gdb, -1L, NULL) < 0)
+		{
+		    return 0;    /* launch input-line window */
+		}
+		gui_mch_start_blink();
+	    }
+	    else
+		break;
+	}
+#else
 	retval = gui_mch_wait_for_chars(-1L);
+#endif
     }
 
     gui_mch_stop_blink();
