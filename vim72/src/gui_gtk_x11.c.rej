--- src/gui_gtk_x11.c	(.../vendor/vim/current)	(revision 223)
+++ src/gui_gtk_x11.c	(.../trunk/vim)	(revision 223)
@@ -6381,7 +6381,13 @@
 gui_mch_update(void)
 {
     while (gtk_events_pending() && !vim_is_input_buf_full())
+    {
+#ifdef FEAT_GDB
+	if (gdb_event(gdb))	/* got a gdb event */
+	    return;
+#endif
 	gtk_main_iteration_do(FALSE);
+    }
 }
 
     static gint
@@ -6418,7 +6424,25 @@
 }
 #endif
 
+#ifdef FEAT_GDB
 /*
+ * Callback function, used when data is available on the gdb file descriptor.
+ */
+/* ARGSUSED */
+    static void
+gdb_request_cb(
+    gpointer	data,
+    gint	source_fd,
+    GdkInputCondition condition)
+{
+    gdb_set_event(gdb, TRUE);
+
+    if (gtk_main_level() > 0)
+	gtk_main_quit();
+}
+#endif
+
+/*
  * GUI input routine called by gui_wait_for_chars().  Waits for a character
  * from the keyboard.
  *  wtime == -1     Wait forever.
@@ -6437,6 +6461,10 @@
     static int	sniff_on = 0;
     static gint	sniff_input_id = 0;
 #endif
+#ifdef FEAT_GDB
+    static int gdb_on        = 0;
+    static gint gdb_input_id = 0;
+#endif
 
 #ifdef FEAT_SNIFF
     if (sniff_on && !want_sniff_request)
@@ -6454,6 +6482,25 @@
     }
 #endif
 
+#ifdef FEAT_GDB
+    /* Remove call back for previous gdb connection */
+    if (! gdb_allowed(gdb) && gdb_on)
+    {
+	if (gdb_input_id)
+	    gdk_input_remove(gdb_input_id);
+	gdb_on = 0;
+    }
+
+    /* A new gdb connection */
+    if (gdb_allowed(gdb) && !gdb_on)
+    {
+	/* Add gdb file descriptor to watch for available data in main loop. */
+	gdb_input_id = gdk_input_add(gdb_fd(gdb),
+			       GDK_INPUT_READ, gdb_request_cb, NULL);
+	gdb_on = 1;
+    }
+#endif
+
     timed_out = FALSE;
 
     /* this timeout makes sure that we will return if no characters arrived in
@@ -6498,6 +6545,15 @@
 		gtk_timeout_remove(timer);
 	    return OK;
 	}
+
+#ifdef FEAT_GDB
+	if (wtime != 0L && gdb_allowed(gdb) && gdb_event(gdb))
+	{
+	    if (timer != 0 && !timed_out)
+		gtk_timeout_remove(timer);
+	    return FAIL;
+	}
+#endif
     } while (wtime < 0 || !timed_out);
 
     /*
