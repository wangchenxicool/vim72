--- src/eval.c	(.../vendor/vim/current)	(revision 223)
+++ src/eval.c	(.../trunk/vim)	(revision 223)
@@ -540,6 +540,9 @@
 static void f_foreground __ARGS((typval_T *argvars, typval_T *rettv));
 static void f_function __ARGS((typval_T *argvars, typval_T *rettv));
 static void f_garbagecollect __ARGS((typval_T *argvars, typval_T *rettv));
+#ifdef FEAT_GDB
+static void f_gdb __ARGS((typval_T *argvars, typval_T *rettv));
+#endif
 static void f_get __ARGS((typval_T *argvars, typval_T *rettv));
 static void f_getbufline __ARGS((typval_T *argvars, typval_T *rettv));
 static void f_getbufvar __ARGS((typval_T *argvars, typval_T *rettv));
@@ -7499,6 +7502,9 @@
     {"foreground",	0, 0, f_foreground},
     {"function",	1, 1, f_function},
     {"garbagecollect",	0, 1, f_garbagecollect},
+#ifdef FEAT_GDB
+    {"gdb",		1, 1, f_gdb},
+#endif
     {"get",		2, 3, f_get},
     {"getbufline",	2, 3, f_getbufline},
     {"getbufvar",	2, 2, f_getbufvar},
@@ -10326,7 +10332,26 @@
 	garbage_collect_at_exit = TRUE;
 }
 
+#ifdef FEAT_GDB
 /*
+ * "gdb()" function
+ */
+    static void
+f_gdb(argvars, rettv)
+    typval_T	*argvars;
+    typval_T	*rettv;
+{
+    char_u *cmd = get_tv_string(&argvars[0]);
+
+    if (*cmd == NUL)
+	gdb_setwinput(gdb, (char_u *)"");   /* open the window input-line */
+    else
+	gdb_docmd(gdb, cmd);	/* send cmd to gdb */
+    rettv->vval.v_number = 1;
+}
+#endif
+
+/*
  * "get()" function
  */
     static void
@@ -11479,6 +11504,9 @@
 #if !defined(USE_SYSTEM) && defined(UNIX)
 	"fork",
 #endif
+#ifdef FEAT_GDB
+	"gdb",
+#endif
 #ifdef FEAT_GETTEXT
 	"gettext",
 #endif
